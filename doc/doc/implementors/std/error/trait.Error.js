(function() {var implementors = {};
implementors["db_core"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"db_core/errors/enum.DBError.html\" title=\"enum db_core::errors::DBError\">DBError</a>","synthetic":false,"types":["db_core::errors::DBError"]}];
implementors["gitpad"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"gitpad/errors/struct.FSError.html\" title=\"struct gitpad::errors::FSError\">FSError</a>","synthetic":false,"types":["gitpad::errors::FSError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"gitpad/errors/enum.ServiceError.html\" title=\"enum gitpad::errors::ServiceError\">ServiceError</a>","synthetic":false,"types":["gitpad::errors::ServiceError"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"gitpad/pages/errors/struct.PageError.html\" title=\"struct gitpad::pages::errors::PageError\">PageError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"gitpad/pages/errors/struct.PageError.html\" title=\"struct gitpad::pages::errors::PageError\">PageError</a>&lt;T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,&nbsp;</span>","synthetic":false,"types":["gitpad::pages::errors::PageError"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()